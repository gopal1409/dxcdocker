pipeline {
    environment {
        registry = "gopal1409/chatapp"
        registryCredentials = 'dockerhubaccount'
        dockerImage = ' '
    }
    agent any
    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "maven"
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git credentialsId: 'git-token', url: 'https://github.com/gopal1409/springapp1.git'

                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
                }
          }
        stage('mvn test') {
            steps {
                  sh "mvn test"
                }
          }  
        stage('Test Report') {
            steps {
                  junit 'target/surefire-reports/*.xml'
                }
          }   
        stage('Check Style') {
            steps {
                  sh 'mvn checkstyle:checkstyle'
                }
          }  
        stage('Check Style View') {
            steps {
                  sh 'mvn checkstyle:checkstyle'
                }
          }  
          stage('Check Style Report') {
            steps {
                  recordIssues(tools: [checkStyle(pattern: 'target/checkstyle-result.xml')])
                }
          }  
          stage('Build Docker Image') {
            steps {
                  script {
                      dockerImage = docker.build registry + ":$BUILD_NUMBER"
                  }
                }
          } 
          stage('Push Docker Image') {
            steps {
                  script {
                      docker.withRegistry('',registryCredentials) {
                          dockerImage.push()
                      }
                  }
                }
          } 
     }
}
